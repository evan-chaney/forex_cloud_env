---
 - hosts: all

   remote_user: provision
   become: yes
   become_method: sudo

   vars:
     certbot_create_if_missing: true
     certbot_install_from_source: true
     certbot_create_method: standalone
     certbot_create_standalone_stop_services: []
  #     - httpd
     certbot_certs:
       - domains:
           - "{{ inventory_hostname }}"
     certbot_admin_email: evanachaney@gmail.com
     certbot_auto_renew: true
     certbot_auto_renew_hour: 3
     certbot_auto_renew_minute: 30
     certbot_auto_renew_options: "--quiet --no-self-upgrade"
   roles:
     - geerlingguy.git
     - geerlingguy.certbot
   tasks:

   - setup:

   - name: Put SELinux in permissive mode, logging actions that would be blocked.
     selinux:
       policy: targeted
       state: permissive
   - name: install firewalld
     yum:
       name: firewalld
       state: present
   - name: Start service firewalld, if not started
     service:
       name: firewalld
       state: started
   - name: Install python firewalld packages
     yum:
       name: python-firewall
       state: present
   - firewalld:
       port: 80/tcp
       permanent: yes
       state: enabled
       immediate: yes
   - firewalld:
       port: 443/tcp
       permanent: yes
       state: enabled
       immediate: yes
   - name: Install  Apache
     yum:
       name: httpd
       state: present
   - name: Start service httpd, if not started
     service:
       name: httpd
       state: started

 - hosts: all

   remote_user: provision
   become: yes
   become_method: sudo

   roles:
     - { role: geerlingguy.apache }
   vars:
     apache_listen_ip: "*"
     apache_listen_port: 80
     apache_listen_port_ssl: 443
     apache_create_vhosts: true
     apache_vhosts:
       # Additional optional properties: 'serveradmin, serveralias, extra_parameters'.
       - servername: "{{ inventory_hostname }}"
         documentroot: "/var/www/html"
     apache_vhosts_ssl:
       - servername: "{{ inventory_hostname }}"
         documentroot: "/var/www/html"
         certificate_file: "/etc/letsencrypt/live/{{ inventory_hostname }}/cert.pem"
         certificate_key_file: "/etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem"
         certificate_chain_file: "/etc/letsencrypt/live/{{ inventory_hostname }}/chain.pem"
     apache_ssl_protocol: "All -SSLv2 -SSLv3"
     apache_ssl_cipher_suite: "AES256+EECDH:AES256+EDH"
   tasks:
     - name: Create hostname file
       copy:
         dest: "/var/www/html/whoami"
         content: "{{ inventory_hostname }}"
